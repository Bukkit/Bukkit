package org.bukkit.persistence.data;

import java.util.Date;
import java.util.logging.Logger;

import org.bukkit.persistence.Persistence;


/**
 * Represents a single field in a data row.
 * 
 * @author NathanWolf
 *
 */
public class DataField
{
	public DataField()
	{	
	}
	
	public DataField(Object value)
	{	
		this.value = value;
	}
	
	public DataField(String name, DataType type)
	{
		this.name = name;
		this.type = type;
	}
	
	public DataField(String name, DataType type, Object value)
	{
		this.name = name;
		this.type = type;
		this.value = value;
	}
	
	public void setType(DataType type)
	{
		this.type = type;
	}

	public DataType getType()
	{
		return type;
	}
	
	public void setValue(Object value)
	{
		this.value = value;
		if (type == null)
		{
			type = DataType.getTypeFromClass(value.getClass());
		}
	}
	
	public Object getValue()
	{
		return value;
	}
	
	public Object getValue(Class<?> targetClass)
	{
		return convertValue(value, targetClass);
	}
	
	public static Object convertValue(Object value, Class<?> targetClass)
	{
		if (value == null) 
		{
			return null;
		}
		
		Class<?> valueClass = value.getClass();
		
		if (targetClass.isAssignableFrom(valueClass))
		{
			return value;
		}
		
		if (targetClass.isEnum() && (int.class.isAssignableFrom(valueClass) || Integer.class.isAssignableFrom(valueClass)))
		{
			int ordinal = (Integer)value;
			return targetClass.getEnumConstants()[ordinal];
		}
		
		if (Date.class.isAssignableFrom(targetClass))
		{
			if (Integer.class.isAssignableFrom(valueClass) || int.class.isAssignableFrom(valueClass))
			{
				Integer intDate = (Integer)value;
				Date d = new Date(intDate * 1000);
				return d;
			}
		}
		
		if (boolean.class.isAssignableFrom(targetClass) || Boolean.class.isAssignableFrom(targetClass))
		{
			if (Boolean.class.isAssignableFrom(valueClass) || boolean.class.isAssignableFrom(valueClass))
			{
				return targetClass.cast((Boolean)value);	
			}
			if (Integer.class.isAssignableFrom(valueClass) || int.class.isAssignableFrom(valueClass))
			{
				Integer intBoolean = (Integer)value;
				Boolean b = intBoolean != 0;
				return b;	
			}
		}
		
		if (float.class.isAssignableFrom(targetClass) || Float.class.isAssignableFrom(targetClass))
		{
			if (Float.class.isAssignableFrom(valueClass) || float.class.isAssignableFrom(valueClass))
			{
				return targetClass.cast((Float)value);	
			}
			if (Integer.class.isAssignableFrom(valueClass) || int.class.isAssignableFrom(valueClass))
			{
				return (Float)(float)(Integer)value;	
			}
			if (Double.class.isAssignableFrom(valueClass) || double.class.isAssignableFrom(valueClass))
			{
				return (Float)(float)(double)(Double)value;	
			}
		}
		
		return value;
	}
	
	public void setName(String name)
	{
		this.name = name;
	}

	public String getName()
	{
		return name;
	}

	public void setAutogenerated(boolean autogenerate)
	{
		this.autogenerate = autogenerate;
	}
	
	public boolean isAutogenerated()
	{
		return autogenerate;
	}

	public void setIdField(boolean id)
	{
		idField = id;
	}
	public boolean isIdField()
	{
		return idField;
	}

	protected static Logger log = Persistence.getLogger();
	protected DataType 		type;
	protected Object		value;
	protected String		name;
	protected boolean		autogenerate;
	protected boolean		idField;
}
