package org.bukkit.generate;

import org.bukkit.World;

/**
 * Specifies the interface that a custom chunk generator must conform to.
 *
 * Custom generators can be passed to the server for creation of non-default worlds
 */

public interface CustomChunkGenerator {
    /**
     * Provides the spawn point for the generated map
     *
     * @return The x coordinate of the spawn point
     */
    int getSpawnX();

    /**
     * Provides the spawn point for the generated map
     *
     * @return The y coordinate of the spawn point
     */
    int getSpawnY();

    /**
     * Provides the spawn point for the generated map
     *
     * @return The z coordinate of the spawn point
     */
    int getSpawnZ();

    /**
     * Generates a chunk at the specified coordinates
     *
     * This is the first pass in the generation system.  
     * The chunk may not be interacted with via the standard API at this point.  
     * Complex blocks like chests should not be placed
     *
     * Assuming the block's location is (X, Y, Z), then the byte location for a 
     * particular block can be calculated using
     *
     * x = X & 0x0F;
     * y = Y & 0xFF;
     * z = Z & 0x0F;
     *
     * chunkX = X >> 4;
     * chunkZ = Z >> 4;
     *
     * blockData[y + (z<<7) + (x<<11)]
     *
     * @param chunkX The x chunk coordinate
     * @param chunkZ The y chunk coordinate
     * @param blockData The buffer for filling with the block data
     * @return The generated byte array
     */

     byte[] generateChunk(int chunkX, int chunkZ, byte[] blockData);

    /**
     * Decorates a chunk at the specified coordinates
     *
     * This is the second pass in the generation system.  
     * The chunk may be interacted with via the standard API at this point.
     * In addition, it is guaranteed the chunks at (x+1, z), (x+1, z+1) and (x, z+1) will 
     * also be loaded.  This allows decorations to cross chunk boundaries.
     *
     * @param world The world object for the world
     * @param chunkX The x chunk coordinate
     * @param chunkZ The z chunk coordinate
     * @return The generated byte array
     */

     void decorateChunk(World world, int chunkX, int chunkZ);

    /**
     * Get generator name
     *
     * This is returns the name of the generator.  It may be used to select the world directory.
     *
     * @return The name of the generator
     */

     String getName();

}
